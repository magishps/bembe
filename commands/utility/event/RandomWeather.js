const XLSX = require("xlsx");
const fs = require("fs");
const path = require("path");

// –ß—Ç–µ–Ω–∏–µ Excel —Ñ–∞–π–ª–æ–≤
function listExcelFiles() {
  const weatherData = path.join(__dirname, '../../../data');
  fs.readdir(weatherData, (err, files) => {
    if (err) return console.error('–û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è –ø–∞–ø–∫–∏:', err);
    const excelFiles = files.filter(file => file.endsWith('.xlsx') && !file.startsWith('~$'));
    console.log('–ù–∞–π–¥–µ–Ω–Ω—ã–µ –ø–æ–≥–æ–¥–Ω—ã–µ —Ñ–∞–π–ª—ã:', excelFiles);
  });
}

// –ü—Ä–æ–≥–Ω–æ–∑ –Ω–∞ 30 –¥–Ω–µ–π
function getMonthlyForecast(season) {
  const filePath = path.resolve(__dirname, '../../../data', `${season}.xlsx`);
  const workbook = XLSX.readFile(filePath);
  const sheet = workbook.SheetNames[0];
  const data = XLSX.utils.sheet_to_json(workbook.Sheets[sheet]);

  let forecast = 'üìÖ –ü–æ–≥–æ–¥–∞ –Ω–∞ 30 –¥–Ω–µ–π:\n';

  for (let day = 1; day <= 30; day++) {
    const roll = Math.floor(Math.random() * 20) + 1;
    const entry = data.find(row => Number(row.d20) === roll);

    if (entry) {
      forecast += `${day}. ${entry.–ü–æ–≥–æ–¥–∞} ‚Äî ${entry.–≠—Ñ—Ñ–µ–∫—Ç—ã}\n`;
    } else {
      forecast += `${day}. ‚ùì d20 = ${roll} ‚Äî –Ω–µ –Ω–∞–π–¥–µ–Ω–æ\n`;
    }
  }

  return forecast;
}

module.exports = {
  listExcelFiles,
  getMonthlyForecast
};
